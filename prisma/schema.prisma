// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String? // By nextAuth
  firstName     String
  lastName      String
  username      String
  emailVerified DateTime? // By nextAuth
  image         String? // By nextAuth
  email         String    @unique
  password      String
  role          Role      @default(USER)
  holidays      Holiday[]
  bio           String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime  @default(now()) @updatedAt @db.Timestamptz(6)

  @@map("users")
}

model Holiday {
  id        String   @id @default(cuid())
  title     String
  notes     String?
  startDate String
  endDate   String
  tags      String[]
  country   String
  city      String
  rating    Float?
  image     String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamptz(6)

  @@map("holidays")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Role {
  ADMIN
  USER
}
